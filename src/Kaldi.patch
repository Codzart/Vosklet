diff --git a/src/configure b/src/configure
index fc3aee6..c93e4e8 100755
--- a/src/configure
+++ b/src/configure
@@ -1261,14 +1261,7 @@ or try another math library, e.g. --mathlib=OPENBLAS (Kaldi may be slower)."
 ** You can also use other matrix algebra libraries. For information, see:
 **   http://kaldi-asr.org/doc/matrixwrap.html"
     fi
-    if [ -f $OPENBLASROOT/lib/libopenblas.so ]; then
-      OPENBLASLIBDIR=$OPENBLASROOT/lib
-    elif [ -f $OPENBLASROOT/lib64/libopenblas.so ]; then
-      # in REDHAT/CentOS package installs, the library is located here
-      OPENBLASLIBDIR=$OPENBLASROOT/lib64
-    else
-      failure "Expected to find the file $OPENBLASROOT/lib/libopenblas.so"
-    fi
+    OPENBLASLIBDIR=$OPENBLASROOT/lib
     if [ -f $OPENBLASROOT/include/cblas.h ] ; then
       OPENBLASINCDIR=$OPENBLASROOT/include
     elif [ -f $OPENBLASROOT/include/openblas/cblas.h ] ; then
diff --git a/src/ivector/ivector-extractor.cc b/src/ivector/ivector-extractor.cc
index c3a1222..71d3725 100644
--- a/src/ivector/ivector-extractor.cc
+++ b/src/ivector/ivector-extractor.cc
@@ -195,7 +195,7 @@ void IvectorExtractor::ComputeDerivedVars() {
   // could because some tasks finish before others.
   {
     TaskSequencerConfig sequencer_opts;
-    sequencer_opts.num_threads = g_num_threads;
+    sequencer_opts.num_threads = 0;
     TaskSequencer<IvectorExtractorComputeDerivedVarsClass> sequencer(
         sequencer_opts);
     for (int32 i = 0; i < NumGauss(); i++)
diff --git a/src/matrix/Makefile b/src/matrix/Makefile
index 398179a..c903fbf 100644
--- a/src/matrix/Makefile
+++ b/src/matrix/Makefile
@@ -10,7 +10,6 @@ include ../kaldi.mk
 
 # you can uncomment matrix-lib-speed-test if you want to do the speed tests.
 
-TESTFILES = matrix-lib-test sparse-matrix-test numpy-array-test #matrix-lib-speed-test
 
 OBJFILES = kaldi-matrix.o kaldi-vector.o packed-matrix.o sp-matrix.o tp-matrix.o \
            matrix-functions.o qr.o srfft.o compressed-matrix.o \
diff --git a/src/util/kaldi-thread.cc b/src/util/kaldi-thread.cc
index 4573e24..4af4e73 100644
--- a/src/util/kaldi-thread.cc
+++ b/src/util/kaldi-thread.cc
@@ -22,7 +22,7 @@
 #include "util/kaldi-thread.h"
 
 namespace kaldi {
-int32 g_num_threads = 4;  // Initialize this global variable.
+int32 g_num_threads = 1;  // Initialize this global variable.
 
 MultiThreadable::~MultiThreadable() {
   // default implementation does nothing
